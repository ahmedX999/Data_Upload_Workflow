name: Deploy Lambda Function

on:
  workflow_dispatch:
    inputs:
      user_id:
        description: 'ID of the user'
        required: true
      instance_id:
        description: 'ID of the instance'
        required: true
      instance_type:
        description: 'Type of instance: google_drive or s3'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check if Lambda function exists
        id: check_lambda
        run: |
          FUNCTION_NAME="${{ github.event.inputs.user_id }}_${{ github.event.inputs.instance_id }}_${{ github.event.inputs.instance_type }}_lambda"
          if aws lambda get-function --function-name "$FUNCTION_NAME"; then
            echo "::set-output name=lambda_exists::true"
          else
            echo "::set-output name=lambda_exists::false"
          fi

      - name: Set up Terraform
        if: steps.check_lambda.outputs.lambda_exists == 'false'
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        if: steps.check_lambda.outputs.lambda_exists == 'false'
        run: terraform init

      - name: Terraform Apply
        if: steps.check_lambda.outputs.lambda_exists == 'false'
        run: |
          terraform apply -auto-approve \
            -var "user_id=${{ github.event.inputs.user_id }}" \
            -var "instance_id=${{ github.event.inputs.instance_id }}" \
            -var "instance_type=${{ github.event.inputs.instance_type }}"
