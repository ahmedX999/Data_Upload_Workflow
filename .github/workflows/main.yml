name: Deploy Lambda Function

on:
  workflow_dispatch:
    inputs:
      user_id:
        description: 'ID of the user'
        required: true
      instance_id:
        description: 'ID of the instance'
        required: true
      instance_type:
        description: 'Type of instance: google_drive or s3'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Check if Lambda function exists
        id: check_lambda
        run: |
          LAMBDA_EXISTS=$(./check_lambda.sh "${{ github.event.inputs.user_id }}_${{ github.event.inputs.instance_id }}_${{ github.event.inputs.instance_type }}_lambda")
          echo "::set-output name=exists::$LAMBDA_EXISTS"

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -auto-approve \
            -var "user_id=${{ github.event.inputs.user_id }}" \
            -var "instance_id=${{ github.event.inputs.instance_id }}" \
            -var "instance_type=${{ github.event.inputs.instance_type }}"
        env:
          LAMBDA_EXISTS: ${{ steps.check_lambda.outputs.exists }}

      - name: Output Results
        run: |
          echo "Function Status: $(terraform output -raw lambda_function_status)"
          echo "Lambda Function Name: $(terraform output -raw lambda_function_name)"
